{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAELH,EAEFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAInBA,E,IA9CSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAwBC,GACtBA,EAAIC,iBAaJ,IAXA,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYf,EAAKa,EAALb,MAAOgB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrBC,EAAYC,OAAOnB,EAAMoB,OACzBC,EAAWF,OAAOH,EAAKI,OACvBE,EAAaL,EAAOG,MAEtBG,EAAYL,EACZM,EAAe,EAEVC,EAAI,EAAGA,GAAIH,EAAYG,GAAI,EAGlC3B,EAFC0B,GAAgB,EAEWD,GAC3BG,KAAKC,GACLC,MAAMC,GAEPN,GAAaF,C,IA0BjB,IAAMM,EAAY,SAAAG,G,IAAE/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAC5BJ,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,OAC3DkC,QAAMC,IAAInC,E,EAGR6B,EAAU,SAAAC,G,IAAE/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAC1BJ,EAAAmC,OAAOK,QAAQ,sBAAqCH,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', submitPromise);\n\nfunction submitPromise (evt) {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount  }\n  } = evt.currentTarget;\n  \n  const delayInit = Number(delay.value);\n  const stepInit = Number(step.value);\n  const amountInit = amount.value;\n\n  let delayProm = delayInit;\n  let positionProm = 0;\n\n  for (let i = 1; i<= amountInit; i +=1) {\n     positionProm += 1;\n\n    createPromise(positionProm, delayProm) \n    .then(onSuccess)\n    .catch(onError)\n\n    delayProm += stepInit;\n\n    }\n  \n   };\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n        // Reject\n      }\n\n    }, delay);\n  });\n  \n};\n\nconst onSuccess = ({position, delay}) => {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  console.log(delay);\n};\n\nconst onError = ({position, delay}) => {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n};\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayInit","Number","value","stepInit","amountInit","delayProm","positionProm","i","then","$ce04d3a99e08e73b$var$onSuccess","catch","$ce04d3a99e08e73b$var$onError","param","Notify","success","concat","console","log","failure"],"version":3,"file":"03-promises.ba7fe7c9.js.map"}